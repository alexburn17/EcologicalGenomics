dim(colData)
x<- split(colData, colData$location)
colDataInt <- x$int
colDataSub <- x$sub
i <- rownames(colDataInt)
s <- rownames(colDataSub)
countDataInt <- countData[,i]
countDataSub <- countData[,s]
dim(countDataInt)
dim(countDataSub)
dds <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = ~ location + health)
dim(dds)
dds <- dds[ rowSums(counts(dds)) > 100, ]
dim(dds)
colData(dds)$health <- factor(colData(dds)$health, levels=c("H","S"))
dds <- DESeq(dds)
res <- results(dds)
res <- res[order(res$padj),]
head(res)
summary(res)
setwd("~/EcologicalGenomics/Scripts")
library("DESeq2")
library("ggplot2")
conds <- read.delim("cols_data_trim.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
colData1 <- as.data.frame(conds)
colDataDay6<-subset(colData1, colData1$day=="day06")
colDataDay6
colData<-subset(colDataDay6, colDataDay6$indiv != "37")
colData # 7 sick # 11 healthy
colDataDay15<-subset(colData1, colData1$day=="day15")
colDataDay15
countsTable <- read.delim('countsdata_trim2.txt', header=TRUE, stringsAsFactors=TRUE, row.names=1)
countData <- as.matrix(countsTable)
countData<-countData[, which(colnames(countData) %in% row.names(colData))]
library(DESeq2)
ls()
rm(list=ls())
setwd("~/EcologicalGenomics/Scripts")
library(plyr)
library(ggplot2)
HealthStat <- rep(c("Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Healthy"),2)
ID <- rep(1:20, 2)
Location <- rep(c("I", "O", "I", "O", "O", "I", "O", "I", "O", "I"), 4)
FoldChange <- rnorm(40, mean = 0, sd = 2)
FoldChangeBack <- rnorm(40, mean = 0, sd = 1)
Gene <- c(rep("Gene1", 20), rep("Gene2", 20))
DF <- data.frame(ID, Gene, HealthStat, Location, FoldChange, FoldChangeBack)
DF1 <- ddply(DF, c("HealthStat", "Gene"), summarise,
n = length(FoldChange),
mean = mean(FoldChange, na.rm=TRUE),
sd = sd(FoldChange, na.rm=TRUE),
se = sd / sqrt(n))
meanCI <- mean(DF$FoldChangeBack)
n <- length(DF$FoldChangeBack)
s <- sd(DF$FoldChangeBack)
MOE <- qnorm(0.975)*s/sqrt(n)
upper <- meanCI + MOE
lower <- meanCI - MOE
colors <- c("slategray3", "dodgerblue4")
plot1 <- ggplot(DF1, aes(x=Gene,
y=mean,
fill=HealthStat)) +
geom_bar(stat="identity",
color = "black",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment",
x = .5,
xend = 2.5,
y = meanCI,
yend = meanCI,
col = "red") + annotate("segment",
x = .5, xend = 2.5,
y = upper,
yend = upper,
col = "red",
linetype = 2,
size = 0.3) + annotate("segment",
x = .5,
xend = 2.5,
y = lower,
yend = lower,
col = "red",
linetype = 2,
size = 0.3)
splitDF <- split(DF, DF$Gene)
model <- aov(data=DF, formula = FoldChange ~ HealthStat)
summary(model)
library(lme4)
nullMod <- lmer(data=splitDF$Gene1, formula = FoldChange ~ 1 + (1|ID) + (1|Location), REML = FALSE)
fullMod <- lmer(data=splitDF$Gene1, formula = FoldChange ~ HealthStat + (1|ID) + (1|Location), REML = FALSE)
anova(nullMod, fullMod)
library("DESeq2")
library("ggplot2")
conds <- read.delim("cols_data_trim.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
colData1 <- as.data.frame(conds)
colDataDay6<-subset(colData1, colData1$day=="day06")
library("DESeq2")
conds <- read.delim("cols_data_trim.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
colData1 <- as.data.frame(conds)
colDataDay6<-subset(colData1, colData1$day=="day06")
colDataDay6
colData<-subset(colDataDay6, colDataDay6$indiv != "37")
conds <- read.delim("cols_data_trim.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
conds <- read.delim("cols_data_trim2.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
setwd("~/EcologicalGenomics")
conds <- read.delim("cols_data_trim.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
conds <- read.delim("RawData/cols_data_trim.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
colData1 <- as.data.frame(conds)
colDataDay6<-subset(colData1, colData1$day=="day06")
colDataDay6
colData<-subset(colDataDay6, colDataDay6$indiv != "37")
colData # 7 sick # 11 healthy
colDataDay15<-subset(colData1, colData1$day=="day15")
colDataDay15
countsTable <- read.delim('RawData/countsdata_trim2.txt', header=TRUE, stringsAsFactors=TRUE, row.names=1)
countData <- as.matrix(countsTable)
countData<-countData[, which(colnames(countData) %in% row.names(colData))]
library(DESeq2)
ddsFULL <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = ~ location + health)
ddsFULL <- ddsFULL[ rowSums(counts(ddsFULL)) > 100, ]
colData(ddsFULL)$health <- factor(colData(ddsFULL)$health, levels=c("H","S"))
ddsFULL <- DESeq(ddsFULL)
resFULL <- results(ddsFULL)
resFULL <- resFULL[order(resFULL$padj),] #sorts according to pvalue
head(resFULL)
summary(resFULL)
names(resFULL)
immuneNames <- read.delim("immune.txt", header=TRUE, stringsAsFactors=FALSE, row.names=1)
row.names(immuneNames) <- immuneNames$trinID
immuneNames <- read.delim("RawData/immune.txt", header=TRUE, stringsAsFactors=FALSE, row.names=1)
immuneNames <- read.delim("Scripts/immune.txt", header=TRUE, stringsAsFactors=FALSE, row.names=1)
row.names(immuneNames) <- immuneNames$trinID
immuneRes<-resFULL[which(row.names(resFULL) %in% row.names(immuneNames)),]
dim(immuneRes) # 254 -  less than 321 because low read counts
mean(immuneRes$log2FoldChange) # [1] 0.0199265
mean(immuneRes$padj[1:188]) # [1] 0.9695943
logfoldrandoMean <- vector(mode="numeric")
for(i in 1:10000){
logfoldrando<-vector(mode='numeric')
logfoldrando <- sample(x=resFULL$log2FoldChange, size=dim(immuneRes)[1], replace=T)
logfoldrandoMean[i]<-mean(logfoldrando)
}
hist(logfoldrandoMean, breaks=50, main="Log2Fold Change Randomization Test")
hist()
par(mfrow=c(1,1))
immuneNames <- read.delim("Scripts/immune.txt", header=TRUE, stringsAsFactors=FALSE, row.names=1)
row.names(immuneNames) <- immuneNames$trinID
immuneRes<-resFULL[which(row.names(resFULL) %in% row.names(immuneNames)),]
dim(immuneRes) # 254 -  less than 321 because low read counts
mean(immuneRes$log2FoldChange) # [1] 0.0199265
mean(immuneRes$padj[1:188]) # [1] 0.9695943
logfoldrandoMean <- vector(mode="numeric")
for(i in 1:10000){
logfoldrando<-vector(mode='numeric')
logfoldrando <- sample(x=resFULL$log2FoldChange, size=dim(immuneRes)[1], replace=T)
logfoldrandoMean[i]<-mean(logfoldrando)
}
hist(logfoldrandoMean, breaks=50, main="Log2Fold Change Randomization Test")
hist()
Interval975 <- quantile(x=logfoldrandoMean, probs=c(0.025,0.975))
abline(v = Interval975,col="black",lwd=2,lty="dotted")
abline(v=mean(immuneRes$log2FoldChange),col="indianred",lwd=2)
summary(resFULL)
sigdiffexpress<-subset(resFULL, resFULL$padj<0.1)
dim(sigdiffexpress) ## 39
immuneSigDiff<-resFULL[which(row.names(sigdiffexpress) %in% row.names(immuneNames)),]
dim(immuneSigDiff)
immuneSigDiff<-immuneNames[which(row.names(immuneNames) %in% row.names(sigdiffexpress)),]
dim(immuneSigDiff)
geneNames <- read.delim("poch_uniprot_GO_nr.txt", header=TRUE, stringsAsFactors=FALSE, row.names=1)
str(geneNames)
ls()
rm(list=ls())
library(ggplot2)
library(plyr)
ID <- c(1:200)
Origin <- c(rep("local", 100),
rep("California", 100))
FlowerType <- rep(c(rep("clover",25),
rep("goldenrod",25),
rep("treefoil",25),
rep("mixed",25)),2)
Mass <- c(rnorm(n = 100,
mean=32,
sd = 8), rnorm(n = 100,
mean=21,
sd=4))
NosemaLoad <-c(rnorm(n = 100,
mean=100000,
sd = 80000), rnorm(n = 100,
mean=500000,
sd=40000))
VarroaLoad <- c(rnorm(n = 100,
mean=5,
sd = 2), rnorm(n = 100,
mean=9,
sd=3))
DF <- data.frame(ID, Origin, FlowerType, Mass, NosemaLoad, VarroaLoad)
DF1 <- ddply(DF, c("FlowerType"), summarise,
n = length(Mass),
mean = mean(Mass, na.rm=TRUE),
sd = sd(Mass, na.rm=TRUE),
se = sd / sqrt(n))
plot1 <- ggplot(DF1, aes(x=FlowerType,
y=mean)) +
geom_bar(stat = "identity") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + coord_cartesian(ylim = c(0, 40))
plot1 <- ggplot(DF1, aes(x=FlowerType,
y=mean)) + geom_bar(stat = "identity")
plot1 + theme_minimal(base_size = 17)
plot1 <- ggplot(DF1, aes(x=FlowerType,
y=mean,
fill=FlowerType)) + geom_bar(stat = "identity")
plot1 + theme_minimal(base_size = 17)
plot1 <- ggplot(DF1, aes(x=FlowerType,
y=mean,
fill=mean) + geom_bar(stat = "identity")
plot1 + theme_minimal(base_size = 17)
#--------------------------------------------------------------------------------------
# Histogram
p1 <- ggplot(DF, aes(Mass))
p1 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17)
#--------------------------------------------------------------------------------------
# Scatter Plot
p1 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
p1 + geom_point(aes(color = Mass)) + theme_minimal(base_size = 17) + geom_smooth()
#--------------------------------------------------------------------------------------
# Box plot
p1 <- ggplot(DF, aes(x=FlowerType,
y=Mass))
p1 + geom_boxplot() + theme_minimal(base_size = 17)
###########################################################################################
# using ddply to get summary stats for mass:
DF2 <- ddply(DF, c("FlowerType", "Origin"), summarise,
n = length(Mass),
mean = mean(Mass, na.rm=TRUE),
sd = sd(Mass, na.rm=TRUE),
se = sd / sqrt(n))
#choosing color pallet
colors <- c("slategray3", "dodgerblue4")
#Create a bar graph for with CI and SE bars
plot1 <- ggplot(DF2, aes(x=FlowerType,
y=mean,
fill=Origin)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Flower Type", y = "Mass (lbs)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Origin:") + coord_cartesian(ylim = c(0, 40))
###########################################################################################
# boxplot
colors1 <- c("slategray3", "dodgerblue4", "blue", "lightblue")
p <- ggplot(DF, aes(x=FlowerType,
y=Mass,
fill=FlowerType))
p + geom_boxplot() + scale_fill_manual(values=colors1, guide_legend(NULL)) + guides(fill=FALSE) + theme_minimal(base_size = 17)
p1 <- ggplot(DF, aes(Mass, fill=Origin))
p1 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot1 <- ggplot(DF1, aes(x=FlowerType,
y=mean,
fill=mean)) + geom_bar(stat = "identity")
plot1 + theme_minimal(base_size = 17)
plot1 <- ggplot(DF1, aes(x=FlowerType,
y=mean
)) + geom_bar(stat = "identity")
plot1 + theme_minimal(base_size = 17)
p1 <- ggplot(DF, aes(Mass))
p1 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17)
p1 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
p1 + geom_point(aes(color = Mass)) + theme_minimal(base_size = 17) + geom_smooth()
p1 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
p1 + geom_point() + theme_minimal(base_size = 17)
lm(data=DF, VarroaLoad~Mass)
mod <- lm(data=DF, VarroaLoad~Mass)
p1 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
p1 + geom_point() + theme_minimal(base_size = 17) + geom_abline(mod)
p1 + geom_point() + theme_minimal(base_size = 17) + geom_abline(aes(mod))
mod <- lm(data=DF, VarroaLoad~Mass)
p1 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
p1 + geom_point() + theme_minimal(base_size = 17) + geom_abline(aes(mod))
p1 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
p1 + geom_point() + theme_minimal(base_size = 17) + geom_line(aes(mod))
p1 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
p1 + geom_point() + theme_minimal(base_size = 17) + geom_smooth(method = "lm", se = TRUE)
p1 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
p1 + geom_point() + theme_minimal(base_size = 18)
p1 <- ggplot(DF, aes(x=FlowerType,
y=Mass))
p1 + geom_boxplot() + theme_minimal(base_size = 17)
p1 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
p1 + geom_point() + theme_minimal(base_size = 17)
plot2 <- ggplot(DF, aes(Mass))
plot2 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17)
plot1 <- ggplot(DF1, aes(x=FlowerType,
y=mean
)) + geom_bar(stat = "identity")
plot1 + theme_minimal(base_size = 17)
plot1 <- ggplot(DF1, aes(x=FlowerType,
y=mean)) + geom_bar(stat = "identity")
plot1 + theme_minimal(base_size = 17)
plot2 <- ggplot(DF, aes(Mass))
plot2 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17)
plot3 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
plot3 + geom_point() + theme_minimal(base_size = 17)
plot4 <- ggplot(DF, aes(x=FlowerType,
y=Mass))
plot4 + geom_boxplot() + theme_minimal(base_size = 17)
colors <- c("slategray3", "dodgerblue4")
plot5 <- ggplot(DF2, aes(x=FlowerType,
y=mean,
fill=Origin)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Flower Type", y = "Mass (lbs)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot5 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Origin:") + coord_cartesian(ylim = c(0, 40))
colors1 <- c("slategray3", "dodgerblue4", "blue", "lightblue")
p <- ggplot(DF, aes(x=FlowerType,
y=Mass,
fill=FlowerType))
p + geom_boxplot() + scale_fill_manual(values=colors1, guide_legend(NULL)) + guides(fill=FALSE) + theme_minimal(base_size = 17)
plot7 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
plot7 + geom_point(aes(color = Mass)) + theme_minimal(base_size = 17) + geom_smooth()
plot6 <- ggplot(DF, aes(Mass, fill=Origin))
plot6 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
Time <- rep(c(rep("Time1", 50), rep("Time2", 50)),2)
Time
DF <- data.frame(ID, Origin, FlowerType, Mass, NosemaLoad, VarroaLoad, Time)
DF3 <- ddply(DF, c("Time", "Origin"), summarise,
n = length(NosemaLoad),
mean = mean(NosemaLoad, na.rm=TRUE),
sd = sd(NosemaLoad, na.rm=TRUE),
se = sd / sqrt(n))
ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Nosema Load (spores/bee)") + coord_cartesian(ylim = c(0, 4300000), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'),
axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=pretty_breaks(n=5)) + labs(linetype="Queen Origin")
ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Nosema Load (spores/bee)") + coord_cartesian(ylim = c(0, 4300000), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=.3) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.2, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
plot9 <- ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.3)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17)
plot9 <- theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
plot9 <- ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.3)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17)
plot9 + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
plot9 <- ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17)
plot9 + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
plot9 <- ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + + coord_cartesian(ylim = c(0, 600000))
plot9 + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
plot9 <- ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + coord_cartesian(ylim = c(0, 600000))
plot9 + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
plot9 <- ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + coord_cartesian(ylim = c(0, 690000))
plot9 + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
plot9 <- ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + coord_cartesian(ylim = c(0, 690000))
plot9 + theme(legend.position=c(.15, .85)) + labs(linetype="Queen Origin")
# create a fake data set:
ID <- c(1:200)
Origin <- c(rep("local", 100),
rep("California", 100))
FlowerType <- rep(c(rep("clover",25),
rep("goldenrod",25),
rep("treefoil",25),
rep("mixed",25)),2)
Mass <- c(rnorm(n = 100,
mean=32,
sd = 8), rnorm(n = 100,
mean=21,
sd=4))
NosemaLoad <-c(rnorm(n = 100,
mean=100000,
sd = 80000), rnorm(n = 100,
mean=500000,
sd=40000))
VarroaLoad <- c(rnorm(n = 100,
mean=5,
sd = 2), rnorm(n = 100,
mean=9,
sd=3))
Time <- rep(c(rep("Time1", 50), rep("Time2", 50)),2)
# create data frame
DF <- data.frame(ID, Origin, FlowerType, Mass, NosemaLoad, VarroaLoad, Time)
###########################################################################################
# using ddply to get summary stats for mass:
DF1 <- ddply(DF, c("FlowerType"), summarise,
n = length(Mass),
mean = mean(Mass, na.rm=TRUE),
sd = sd(Mass, na.rm=TRUE),
se = sd / sqrt(n))
###########################################################################################
# plotting using ggplot
# simple graphs
#--------------------------------------------------------------------------------------
# Bar Plot
plot1 <- ggplot(DF1, aes(x=FlowerType,
y=mean)) + geom_bar(stat = "identity")
plot1 + theme_minimal(base_size = 17)
# + coord_cartesian(ylim = c(0, 40))
#--------------------------------------------------------------------------------------
# Histogram
plot2 <- ggplot(DF, aes(Mass))
plot2 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17)
#--------------------------------------------------------------------------------------
# Scatter Plot
plot3 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
plot3 + geom_point() + theme_minimal(base_size = 17)
#--------------------------------------------------------------------------------------
# Box plot
plot4 <- ggplot(DF, aes(x=FlowerType,
y=Mass))
plot4 + geom_boxplot() + theme_minimal(base_size = 17)
###########################################################################################
###########################################################################################
# plotting using ggplot
# more complicated graphs
# using ddply to get summary stats for mass:
DF2 <- ddply(DF, c("FlowerType", "Origin"), summarise,
n = length(Mass),
mean = mean(Mass, na.rm=TRUE),
sd = sd(Mass, na.rm=TRUE),
se = sd / sqrt(n))
#--------------------------------------------------------------------------------------
# Bar Plot
#choosing color pallet
colors <- c("slategray3", "dodgerblue4")
#Create a bar graph for with CI and SE bars
plot5 <- ggplot(DF2, aes(x=FlowerType,
y=mean,
fill=Origin)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Flower Type", y = "Mass (lbs)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot5 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Origin:") + coord_cartesian(ylim = c(0, 40))
#--------------------------------------------------------------------------------------
# Histogram
plot6 <- ggplot(DF, aes(Mass, fill=Origin))
plot6 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
#--------------------------------------------------------------------------------------
# Scatter Plot
plot7 <- ggplot(DF, aes(x=Mass,
y=VarroaLoad))
plot7 + geom_point(aes(color = Mass)) + theme_minimal(base_size = 17) + geom_smooth()
# method = "lm", se = TRUE
#--------------------------------------------------------------------------------------
# Box plot
colors1 <- c("slategray3", "dodgerblue4", "blue", "lightblue")
plot8 <- ggplot(DF, aes(x=FlowerType,
y=Mass,
fill=FlowerType))
plot8 + geom_boxplot() + scale_fill_manual(values=colors1, guide_legend(NULL)) + guides(fill=FALSE) + theme_minimal(base_size = 17)
###########################################################################################
ls()
plot9 <- ggplot(data = DF3,
aes(x = Time,
y = mean,
group = Origin)
) + geom_point(size=6) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time", y = "Nosema Load (spores/bee)") + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + coord_cartesian(ylim = c(0, 690000), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1))
plot9 + theme(legend.position=c(.15, .85)) + labs(linetype="Queen Origin")
plot9
boxplot(DF$Mass~DF$FlowerType)
